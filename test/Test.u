%! Test

Test example.
This is me typing.
The first line \emph{must} be \%! NAME.
The sections are heirarchical: one ! is a part, two is a chapter, three is a section, four is a subsection.
Five and more are undefined.

%!! Test, Chapter One

Chunks can contain just text, just code, or a mix in equal measure.
Text is any line that does not start with \%!, \%\@, \%\#, \%\$, or \%\%.
Text is expected to be \LaTeX source.
Lines that start with \%! were discussed above--they correspond to the heirarchical structure in \LaTeX documents.
Lines that start with \%\@ are C source that \emph{will} be tangled.
An example follows:

%@ Name of C Section
int main(void) {
	return EXIT_SUCCESS;
}
%@

When weaved, this section will be inserted in a listings, verbatim, or minting section (haven't decided yet).

%!!! Section: Untangled C Source

The command \%\#, in contrast to \%\@, will add a listings/verbatim/minting section with the C code inside, but will not add it to the tangle.
So, below, the C source will be visible in the \LaTeX output, but will not be present in the C file.

%$ C Example Section
long evil(void) {
	#define DONTDOTHIS 69
	return DONTDOTHIS;
}
%$

%!!!! Subsection for the Edification of Input Files

When we add the \%\$ command, we will expect a file URI, open it, and insert it into the text at this point, removing the \%\$ command.
So, the below command should insert a new C snippet, once it has been inserted.

%% TestC.u

%!! Chapter Two: C Ordering

When tangling, we need to know how the author intended the C source to be ordered.
In order to do that, we use the \%\% command.
So, each C section needs a name; the \%\% command followed by that section's name will define the order that section appears in.
\LaTeX with links to the appropriate listings is inserted into the weave.
Let's demo this by ordering the two C sections above.

%# Imports
%# Name of C Section

Ordering and sections can appear in any order.
